pipeline {
    agent any 
    tools {
        jdk 'jdk'
        nodejs 'nodejs'
    }
    environment  {
        SCANNER_HOME=tool 'sonar-scanner'
        
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git credentialsId: 'GITHUB', url: 'https://github.com/hamzahashmi033/End-to-End-Kubernetes-Three-Tier-DevSecOps-Project.git'
            }
        }
        stage('Sonarqube Analysis') {
            steps {
                dir('Application-Code/frontend') {
                    withSonarQubeEnv('sonar-server') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=three-tier-frontend \
                        -Dsonar.projectKey=three-tier-frontend '''
                    }
                }
            }
        }
        stage('Quality Check') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
            }
        }
        stage('OWASP Dependency-Check Scan') {
            steps {
                dir('Application-Code/frontend') {
                    dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }
        stage('Trivy File Scan') {
            steps {
                dir('Application-Code/frontend') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }
        stage("Docker Build & Push"){
            steps{
                script{
                    dir('Application-Code/frontend') {
                        withDockerRegistry(credentialsId: 'docker', toolName: 'docker'){
                            sh "docker build -t threetierfrontend ."
                            sh "docker tag threetierbackend hamzahashmi0333/threetierfrontend:${BUILD_NUMBER}"
                            sh "docker push hamzahashmi0333/threetierfrontend:${BUILD_NUMBER} "
                        }
                    }
                }
            }
        }
        stage("TRIVY Image Scan") {
            steps {
                sh 'trivy image hamzahashmi0333/threetierfrontend:${BUILD_NUMBER} > trivyimage.txt' 
            }
        }
        stage('Checkout Code') {
            steps {
                git credentialsId: 'GITHUB', url: 'https://github.com/hamzahashmi033/End-to-End-Kubernetes-Three-Tier-DevSecOps-Project.git'
            }
        }
        stage('Update Deployment file') {
            environment {
                GIT_REPO_NAME = "End-to-End-Kubernetes-Three-Tier-DevSecOps-Project"
                GIT_USER_NAME = "hamzahashmi033"
            }
            steps {
                dir('Kubernetes-Manifests-file/Frontend') {
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                       sh "git config user.email hashmihamza846@gmail.com"
                       sh "git config user.name hamzahashmi033"
                       sh "sed -i 's+hamzahashmi0333/threetierfrontend.*+hamzahashmi0333/threetierfrontend:${BUILD_NUMBER}+g' deployment.yaml"
                       sh 'git add deployment.yaml'
                       sh "git commit -m 'Update deployment image to hamzahashmi0333/threetierfrontend:${BUILD_NUMBER}'"
                       sh "git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:master"
                    }
                }
            }
        }
    }
}
